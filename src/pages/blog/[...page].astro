---
import type { GetStaticPathsOptions } from "astro";

import Layout from "@layouts/Layout.astro";
import { queryBlogs } from '@utils';
import BlogList from "@components/features/blog/BlogList.astro";
import Pagination from '@components/Pagination.astro';

import ogpImage from "@assets/noimage.png";

// 1ページに表示する件数を設定
export const postsPerPage = 16;

// getStaticPaths()で動的なルートを設定
export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const blogs = await queryBlogs({ sortBy: 'date' });

    // 並び替えた投稿の配列から、1ページにX記事づつ入るようにページを生成
    return paginate(blogs, { pageSize: postsPerPage });
}

// paginate()関数を使用すると、各ページのデータはpageプロパティとして渡される
const { page } = Astro.props;
---

<Layout title={`${page.currentPage}ページ目 | 情報研究会 CACTUS`}>
    <Fragment slot="head">
        <meta property="og:type" content="article" />
        <meta name="twitter:card" content="summary_large_image" />
		<meta property="og:title" content="記事一覧 | 情報研究会 CACTUS" />
		<meta property="og:description" content="情報研究会 CACTUSのwebサイトです。" />
		<meta property="og:image" content={ogpImage.src} />
    </Fragment>
    
    <div class="body">
        <h1>Blog</h1>
        <h2>{page.currentPage}ページ</h2>

        <BlogList blogs={page.data} />

        <Pagination page={page} baseUrl="/blog" />
    </div>
</Layout>

<style>
    .body {
        margin: 0 auto;
        max-width: 1100px;
        padding: 0 1rem;
    }

    .body h1 {
        font-size: 2.5rem;
        margin: 0 0 0.5rem 0;
        color: var(--color-text-primary);
        font-weight: 700;
        text-align: center;
    }

    .body h2 {
        font-size: 1.2rem;
        margin: 0 0 2rem 0;
        color: var(--color-text-secondary);
        font-weight: 500;
        text-align: center;
    }

    .card-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        gap: 1.5rem;
        margin-bottom: 3rem;
    }

    @media (max-width: 768px) {
        .body {
            padding: 0 0.5rem;
        }

        .body h1 {
            font-size: 2rem;
        }

        .card-container {
            gap: 1rem;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        }
    }

    @media (max-width: 480px) {
        .card-container {
            grid-template-columns: 1fr;
        }
    }
</style>
